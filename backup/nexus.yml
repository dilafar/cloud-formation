Parameters:
  RoleTempName:
    Description: Name of the base stack with all infra resources
    Type: String
    Default: cicds3role
  KeyName: 
    Type: String
  MyIP:
    Type: String
  InstanceType: 
    Type: String
    Default: t2.micro
  JenkStackName:
    Description: Name of the base stack with all infra resources
    Type: String
    Default: jenk  

Mappings: 
  AmiRegionMap: 
    us-east-1:
      AMI: ami-0ff8a91507f77f867
    us-west-1:
      AMI: ami-0bdb828fd58c52235

Resources: 
  NexusInstance:
    Type: AWS::EC2::Instance
    Properties: 
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      ImageId: !FindInMap 
        - AmiRegionMap
        - !Ref AWS::Region
        - AMI
      Tags:
        - Key: "Name"
          Value: "Nexus Server"
      SecurityGroups:
        - !Ref NexusSecurityGroup
      IamInstanceProfile:
        Fn::ImportValue:
          Fn::Sub: "${RoleTempName}-S3RoleProfileName"
      UserData:
        Fn::Base64:
          !Sub |
          #!/bin/bash
          yum update
          yum install openjdk-8-jre-headless -y
          yum install net-tools -y  
          yum install awscli -y  

          mkdir -p /opt/nexus/
          mkdir -p /tmp/nexus/
          cd /tmp/nexus/

          NEXUSURL = "https://download.sonatype.com/nexus/3/latest-unix.tar.gz"         
          wget $NEXUSURL -O nexus.tar.gz
          EXTOUT=`tar xzvf nexus.tar.gz`
          NEXUSDIR=`echo $EXTOUT | cut -d '/' -f1`
          rm -rf /tmp/nexus/nexus.tar.gz
          rsync -avzh /tmp/nexus/ /opt/nexus/

          useradd nexus
          chown -R nexus.nexus /opt/nexus

          cat <<EOT>> /etc/systemd/system/nexus.service
          [Unit]
          Description=nexus service
          After=network.target
          [Service]
          Type=forking
          LimitNOFILE=65536
          ExecStart=/opt/nexus/$NEXUSDIR/bin/nexus start
          ExecStop=/opt/nexus/$NEXUSDIR/bin/nexus stop
          User=nexus
          Restart=on-abort
          [Install]
          WantedBy=multi-user.target

          EOT

          echo 'run_as_user="nexus"'  > /opt/nexus/$NEXUSDIR/bin/nexus.rc

          systemctl daemon-reload
          systemctl start nexus
          systemctl enable nexus

          aws s3 cp s3://cicd-data/nexus-cicd.tar.gz /opt
          cd /opt/
          sleep 5
          systemctl stop nexus
          sleep 10
          tar xzvf nexus-cicd.tar.gz
          chown -R nexus.nexus /opt/nexus

          systemctl daemon-reload
          systemctl start nexus
          systemctl enable nexus
          reboot
  NexusSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: NexusSecurityGroup
      GroupDescription: Allow http and ssh from myip
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 8081
          ToPort: 8081
          CidrIp: !Ref MyIP

        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: !Ref MyIP
  NexusBackendSecurityGroup:
    Type: AWS::EC2::SecurityGroupIngress
    Properties:
      GroupId:
        Fn::GetAtt:
          - NexusSecurityGroup
          - GroupId
      IpProtocol: tcp 
      FromPort: 8081
      ToPort: 8081
      SourceSecurityGroupId:
        Fn::ImportValue:
          Fn::Sub: "${JenkStackName}-SGID"
